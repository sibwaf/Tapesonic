name: "Publish latest image"

on:
  push:
    branches:
      - "master"

permissions:
  contents: "read"
  packages: "write"

env:
  REGISTRY: "ghcr.io"

jobs:
  build-webapp:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Set up NodeJS"
        uses: "actions/setup-node@v3"
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: "webapp/package-lock.json"

      - name: "Install dependencies"
        run: "npm install"
        working-directory: "webapp"

      - name: "Build"
        run: "npm run build"
        working-directory: "webapp"

      - name: "Upload webapp distribution"
        uses: "actions/upload-artifact@v3"
        with:
          name: "webapp-dist"
          path: "webapp/dist"
          if-no-files-found: "error"

  publish:
    runs-on: "ubuntu-latest"
    needs:
      - "build-webapp"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Download webapp distribution"
        uses: "actions/download-artifact@v3"
        with:
          name: "webapp-dist"
          path: "webapp/dist"

      - name: "Set up variables"
        run: |
          echo IMAGE_NAME=$(echo "$GITHUB_REPOSITORY" | tr "[:upper:]" "[:lower:]") >> $GITHUB_ENV
          echo SHA_SHORT=$(echo "$GITHUB_SHA" | head -c7) >> $GITHUB_ENV

      - name: "Set up QEMU"
        uses: "docker/setup-qemu-action@v3"

      - name: "Set up Docker Buildx"
        uses: "docker/setup-buildx-action@v3"

      - name: "Log in to the Container registry"
        uses: "docker/login-action@v3"
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build and push"
        uses: "docker/build-push-action@v5"
        with:
          context: "."
          build-args: |
            APP_VERSION=${{ env.SHA_SHORT }}
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SHA_SHORT }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          push: true
